user angie angie;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 8192;
worker_shutdown_timeout 120s;
timer_resolution 100ms;
pcre_jit on;
error_log /var/log/angie/error.log notice;
pid /run/angie/angie.pid;

events {
  worker_connections 1024;
  use epoll;
  accept_mutex off;
  multi_accept on;
}

http {
  access_log off;

  include /etc/angie/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  log_format extended '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" rt="$request_time" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'h="$host" sn="$server_name" ru="$request_uri" u="$uri" '
                      'ucs="$upstream_cache_status" ua="$upstream_addr" us="$upstream_status" '
                      'uct="$upstream_connect_time" urt="$upstream_response_time"';

  server_tokens off;
  client_header_timeout 10;
  client_body_timeout 15;
  send_timeout 5;
  client_max_body_size 10m;
  client_body_buffer_size 128k;
  client_header_buffer_size 16k;
  large_client_header_buffers 8 16k;
  server_names_hash_bucket_size 128;
  request_pool_size 8k;
  output_buffers 8 512k;
  postpone_output 1460;
  keepalive_timeout 300;
  keepalive_requests 250;
  ignore_invalid_headers on;
  reset_timedout_connection on;
  proxy_headers_hash_bucket_size 128;
  map_hash_bucket_size 128;

  add_header X-XSS-Protection "1; mode=block" always;

  fastcgi_buffer_size 16k;
  fastcgi_buffers 64 4k;
  fastcgi_keep_conn on;
  fastcgi_intercept_errors on;

  gzip off;

  aio threads;
  aio_write on;
  directio 2m;
  sendfile on;
  sendfile_max_chunk 512k;
  tcp_nopush on;
  tcp_nodelay on;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  include /etc/angie/http.d/*.conf;
}